CREATE OR REPLACE FUNCTION migra.f__on_trig_tts_libro_bancos_tts_libro_bancos (
						  v_operacion varchar,p_id_cuenta_bancaria int4,p_id_libro_bancos int4,p_a_favor varchar,p_detalle text,p_estado varchar,p_estado_reg varchar,p_fecha date,p_fecha_mod timestamp,p_fecha_reg timestamp,p_id_libro_bancos_fk int4,p_id_usuario_mod int4,p_id_usuario_reg int4,p_importe_cheque numeric,p_importe_deposito numeric,p_indice numeric,p_nro_cheque int4,p_nro_comprobante varchar,p_nro_liquidacion varchar,p_observaciones text,p_origen varchar,p_tipo varchar)
						RETURNS text AS
						$BODY$

/*
						Function:  Para migracion de la tabla param.tgestion
						Fecha Creacion:  November 30, 2013, 11:48 pm
						Autor: autogenerado (ADMINISTRADOR DEL SISTEMA )
						
						*/
						
						DECLARE
						
						BEGIN
						
						    if(v_operacion = 'INSERT') THEN
						
						          INSERT INTO 
						            MIGRA.tts_libro_bancos (
						id_cuenta_bancaria,
						id_libro_bancos,
						a_favor,
						detalle,
						estado,
						estado_reg,
						fecha,
						fecha_mod,
						fecha_reg,
						id_libro_bancos_fk,
						id_usuario_mod,
						id_usuario_reg,
						importe_cheque,
						importe_deposito,
						indice,
						nro_cheque,
						nro_comprobante,
						nro_liquidacion,
						observaciones,
						origen,
						tipo)
				VALUES (
						p_id_cuenta_bancaria,
						p_id_libro_bancos,
						p_a_favor,
						p_detalle,
						p_estado,
						p_estado_reg,
						p_fecha,
						p_fecha_mod,
						p_fecha_reg,
						p_id_libro_bancos_fk,
						p_id_usuario_mod,
						p_id_usuario_reg,
						p_importe_cheque,
						p_importe_deposito,
						p_indice,
						p_nro_cheque,
						p_nro_comprobante,
						p_nro_liquidacion,
						p_observaciones,
						p_origen,
						p_tipo);

						       
							    ELSEIF  v_operacion = 'UPDATE' THEN
						               UPDATE 
						                  MIGRA.tts_libro_bancos  
						                SET						 id_cuenta_bancaria=p_id_cuenta_bancaria
						 ,a_favor=p_a_favor
						 ,detalle=p_detalle
						 ,estado=p_estado
						 ,estado_reg=p_estado_reg
						 ,fecha=p_fecha
						 ,fecha_mod=p_fecha_mod
						 ,fecha_reg=p_fecha_reg
						 ,id_libro_bancos_fk=p_id_libro_bancos_fk
						 ,id_usuario_mod=p_id_usuario_mod
						 ,id_usuario_reg=p_id_usuario_reg
						 ,importe_cheque=p_importe_cheque
						 ,importe_deposito=p_importe_deposito
						 ,indice=p_indice
						 ,nro_cheque=p_nro_cheque
						 ,nro_comprobante=p_nro_comprobante
						 ,nro_liquidacion=p_nro_liquidacion
						 ,observaciones=p_observaciones
						 ,origen=p_origen
						 ,tipo=p_tipo
						 WHERE id_libro_bancos=p_id_libro_bancos;

						       
						       ELSEIF  v_operacion = 'DELETE' THEN
						       
						         DELETE FROM 
						              MIGRA.tts_libro_bancos
 
						              						 WHERE id_libro_bancos=p_id_libro_bancos;

						       
						       END IF;  
						  
						 return 'true';
						
						-- statements;
						--EXCEPTION
						--WHEN exception_name THEN
						--  statements;
						END;
						$BODY$


						LANGUAGE 'plpgsql'
						VOLATILE
						CALLED ON NULL INPUT
						SECURITY INVOKER
						COST 100;